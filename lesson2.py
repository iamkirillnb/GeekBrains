"""1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе."""
my_list = [1, 2, True, 'string', ['new list', 2, 5, 1]]
for i in my_list:
    print(type(i))

'''2. Для списка реализовать обмен значений соседних элементов, т.е.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input().'''
my_list = [int(input('Введите значение элемента списка(только числа): ')) for i in range(int(input('Введите количество элементов списка: ')))]
print(my_list)
for i in range(0, len(my_list)-1, 2):
    for j in range(i+1, i+2):
        my_list[i], my_list[j] = my_list[j], my_list[i]
print(my_list)

'''3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и через dict.'''
# решение через Dict
print('решение через Dict')
month_base = {'Зима': [1, 2, 12], 'Весна': [3, 4, 5], 'Лето': [6, 7, 8], 'Осень': [9, 10, 11]}
month = int(input('Введите номер месяца: '))
for i in month_base:
    if month in month_base[i]:
        print(i)
# решение через список
print('решение через List')
month_base_list = ['зима', 'зима', 'весна', 'весна', 'весна', 'лето', 'лето', 'лето', 'осень', 'осень', 'осень', 'зима']
number = int(input('Введите номер месяца: '))
print(month_base_list[number-1])

'''4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
Вывести каждое слово с новой строки.
Строки необходимо пронумеровать.
Если в слово длинное, выводить только первые 10 букв в слове.'''
my_words = input('Вводите слова через пробел: ').split()
for i, j in enumerate(my_words):
    print(i+1, j[:10])

'''5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. 
Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].'''

my_list = [7, 5, 3, 3, 2]
print(my_list)
number = int(input('введите новый элемнт списка: '))
my_list.append(number)
print(sorted(my_list)[::-1])
number = int(input('введите новый элемнт списка: '))
my_list.append(number)
print(sorted(my_list)[::-1])
number = int(input('введите новый элемнт списка: '))
my_list.append(number)
print(sorted(my_list)[::-1])

'''6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. 
В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). 
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, 
в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}'''
my_base = [
    (1, {'название': 'компьютер', 'цена': 20000, 'количество': 5, 'eд': 'шт.'}),
    (2, {'название': 'принтер', 'цена': 6000, 'количество': 2, 'eд': 'шт.'}),
    (3, {'название': 'сканер', 'цена': 2000, 'количество': 7, 'eд': 'шт.'})
    ]
full_dict = {}
for i in my_base:
    for k, v in i[1].items():
        full_dict.setdefault(k, []).append(v)
for i, j in full_dict.items():
    print(f'{i} : {j}')
