'''1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.'''

def div_numbers(a,b):
    if b == 0:
        print('Деление на ноль запрещено. Повторите попытку')
        b = int(input('Введите второе значение: '))
    return f'{a} / {b} = {a/b}'

print(div_numbers(int(input('Введите первое значение: ')), int(input('Введите второе значение: '))))

'''2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Реализовать вывод данных о пользователе одной строкой.'''

def person(name='', surname='', year_birth='', city='', email='', phone=''):
    return f"{name} {surname} {year_birth} {city} {email} {phone}"


print(person('Кирилл', 'Смирнов', 1990, 'Москва', 'iamkirillnb@gmail.com', 89163425688))
print(person(surname='Смирнов', phone=89163425688, email='iamkirillnb@gmail.com', name='Кирилл', year_birth=1990, city='Москва'))
print(person(name='GeekBrains'))

'''3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.'''

def my_func(first, second, third):
    lst = [first, second, third]
    return sum(sorted(lst)[1:])


print(my_func(2, 5, 1))

'''4. Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.'''

def my_func(float_number, int_number):
    return float_number**int_number

def my_func2(float_number, int_number):
    degree = float_number
    if int_number > 0:
        for i in range(1, int_number):
            float_number *= degree
    if int_number < 0:
        for i in range(abs(int_number)+1):
            float_number *= (1/degree)
    return float_number

float_number = float(input('Введите действительное число: '))
int_number = int(input('Введите целое отрицательное число: '))

print(my_func(float_number=float_number, int_number=int_number))
print(my_func2(float_number=float_number, int_number=int_number))

'''5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.'''

def summa():
    count = 0
    while True:
        number = [i for i in input('Вводите числа через пробел: ').split()]
        if 'q' in number:
            count += sum(list(map(int, number[:number.index('q')])))
            return count
        count += sum(list(map(int, number)))
        print(count)
    return count

print(summa())

'''6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. 
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().'''

def int_func():
    text = [str(i).capitalize() for i in input('Введите слова с маленькой быквы через пробел: ').split()]
    return print(*text)

int_func()